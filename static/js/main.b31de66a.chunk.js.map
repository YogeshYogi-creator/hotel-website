{"version":3,"sources":["reducers/hotelsListReducer.js","store/configureStore.js","actions/hotelsList_Action.js","List.js","App.js","index.js"],"names":["initialHotelsList","hotelsListReducer","state","action","type","payload","configureStore","createStore","combineReducers","hotelsData","applyMiddleware","thunk","getHotels","data","List","props","className","map","ele","name","country","city","price","id","App","useState","input","setInput","dispatch","useDispatch","useEffect","axios","get","then","response","result","catch","err","Swal","fire","message","useSelector","length","filter","toLowerCase","match","style","textAlign","placeholder","onChange","e","preventDefault","target","value","overflow","height","position","top","store","subscribe","ReactDOM","render","document","getElementById"],"mappings":"kKAAMA,EAAoB,GAaXC,EAXW,WAAsC,IAArCC,EAAoC,uDAA9BF,EAAmBG,EAAW,uCAC3D,OAAOA,EAAOC,MACV,IAAK,kBACD,OAAO,YAAID,EAAOE,SAGtB,QACI,OAAO,YAAIH,K,QCCRI,EANQ,WAInB,OAHcC,YAAYC,YAAgB,CACtCC,WAAYR,IACZS,YAAgBC,O,iDCSXC,EAAY,SAACC,GACtB,MAAO,CACHT,KAAM,kBACNC,QAASQ,I,OCaFC,EA9BF,SAACC,GACV,IAAOF,EAAQE,EAARF,KAEP,OACI,8BACI,wBAAOG,UAAY,2BAAnB,UACI,gCACI,+BACI,sCACA,yCACA,sCACA,iDAGR,gCACKH,EAAKI,KAAI,SAAAC,GACN,OACI,+BACI,6BAAKA,EAAIC,OACT,6BAAKD,EAAIE,UACT,6BAAKF,EAAIG,OACT,wCAASH,EAAII,WAJNJ,EAAIK,eC4B5BC,G,MAzCH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAWC,cAEjBC,qBAAU,WACRF,GFPM,SAACA,GACHG,IAAMC,IAAI,mDACTC,MAAK,SAACC,GACH,IAAMC,EAASD,EAASrB,KAExBe,EAAShB,EAAUuB,OAEtBC,OAAM,SAACC,GACJC,IAAKC,KAAKF,EAAIG,iBEAtB,CAACZ,IAEH,IAAIf,EAAO4B,aAAY,SAACvC,GAClB,OAAOA,EAAMO,cAenB,OANKiB,EAAMgB,OAAS,IACd7B,EAAOA,EAAK8B,QAAO,SAACzB,GAChB,OAAOA,EAAIE,QAAQwB,cAAcC,MAAMnB,OAK/C,sBAAKV,UAAY,YAAjB,UACE,8BACE,oBAAIA,UAAY,YAAY8B,MAAS,CAACC,UAAW,UAAjD,wBAEF,uBACA,gCACI,8BACM,uBAAO3C,KAAO,OAAO4C,YAAc,oBAAoBC,SAlB3C,SAACC,GACrBA,EAAEC,iBACFxB,EAASuB,EAAEE,OAAOC,QAgB4EA,MAAS3B,MAErG,qBAAKoB,MAAS,CAACQ,SAAU,SAAUC,OAAQ,QAASC,SAAU,WAAYC,IAAK,QAA/E,SACE,cAAC,EAAD,CAAM5C,KAAQA,cCnClB6C,EAAQpD,IAEZoD,EAAMC,WAAU,eAIpBC,IAASC,OACP,cAAC,IAAD,CAAUH,MAASA,EAAnB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.b31de66a.chunk.js","sourcesContent":["const initialHotelsList = []\r\n\r\nconst hotelsListReducer = (state=initialHotelsList, action) => {\r\n    switch(action.type){\r\n        case(\"GET_HOTELS_LIST\"):{\r\n            return [...action.payload]\r\n        }\r\n\r\n        default:{\r\n            return [...state]\r\n        }\r\n    }\r\n}\r\nexport default hotelsListReducer","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport hotelsListReducer from '../reducers/hotelsListReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(combineReducers({\r\n        hotelsData: hotelsListReducer\r\n    }), applyMiddleware(thunk))\r\n    return store\r\n}\r\nexport default configureStore","import axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const startGetHolels = () => {\r\n    return(dispatch)=> {\r\n        axios.get('https://fake-hotel-api.herokuapp.com/api/hotels')\r\n        .then((response)=>{\r\n            const result = response.data\r\n            // console.log(\"Hotels\", result)\r\n            dispatch(getHotels(result))\r\n        })\r\n        .catch((err)=>{\r\n            Swal.fire(err.message)\r\n        })\r\n    }\r\n}\r\nexport const getHotels = (data) => {\r\n    return {\r\n        type: \"GET_HOTELS_LIST\",\r\n        payload: data\r\n    }\r\n}","import React from 'react'\r\n\r\nconst List = (props) => {\r\n    const {data} = props\r\n\r\n    return(\r\n        <div>\r\n            <table className = \"table table-hover sticky\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Country</th>\r\n                        <th>City</th>\r\n                        <th>Room-Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map(ele=>{\r\n                        return(\r\n                            <tr key = {ele.id}>\r\n                                <td>{ele.name}</td>\r\n                                <td>{ele.country}</td>\r\n                                <td>{ele.city}</td>\r\n                                <td>{`$${ele.price}`}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nexport default List","import React, {useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {startGetHolels} from './actions/hotelsList_Action'\nimport List from './List'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nconst App = () => {\n  const [input, setInput] = useState('')\n  const dispatch = useDispatch()\n\n  useEffect(()=>{\n    dispatch(startGetHolels())\n  },[dispatch])\n\n  let data = useSelector((state)=>{\n        return state.hotelsData\n    })\n    // console.log(\"list\", data)\n\n\n  const handleInputChange = (e) => {\n        e.preventDefault()\n        setInput(e.target.value)\n    }\n    if(input.length > 0){\n        data = data.filter((ele) => {\n            return ele.country.toLowerCase().match(input)\n        })\n    }\n\n  return (\n    <div className = \"container\">\n      <div>\n        <h1 className = \"display-4\" style = {{textAlign: \"center\"}}>La-Hotel</h1>\n      </div>\n      <hr/>\n      <div>\n          <div>\n                <input type = \"text\" placeholder = \"search by country\" onChange = {handleInputChange} value = {input}/>\n          </div>\n          <div style = {{overflow: \"scroll\", height: \"480px\", position: \"relative\", top: \"15px\"}}>\n            <List data = {data}/>\n          </div>\n      </div>\n    </div>\n  )\n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport configureStore from './store/configureStore'\nimport {Provider} from 'react-redux'\nimport App from './App'\n\n  const store = configureStore()\n    // console.log(store.getState())\n    store.subscribe(()=>{\n    // console.log('updated store', store.getState())\n  })\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}